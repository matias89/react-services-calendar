{"version":3,"sources":["lib/components/calendarColumn/CalendarColumn.js","lib/components/calendarRow/CalendarRow.js","lib/constants/index.js","lib/components/calendarHeader/CalendarHeader.js","lib/components/loader/Loader.js","lib/components/calendarSelectOption/CalendarSelectOption.js","lib/components/calendar/Calendar.js","index.js"],"names":["CalendarColumn","children","className","CalendarRow","months","listOfDays","monday","tuesday","wednesday","thursday","friday","saturday","sunday","CalendarHeader","allowToBack","date","handleOnNextMonth","handleOnPrevMonth","type","disabled","onClick","getFullYear","getMonth","Loader","CalendarSelectOption","onClose","onAccept","selectedDay","data","urlToValidate","useState","itemSelected","setItemSelected","showLoader","setShowLoader","showError","setShowError","handleOnSelectItem","event","persist","value","target","info","toISOString","split","hours","window","fetch","then","response","status","toLocaleDateString","map","hour","key","name","id","onChange","htmlFor","from","to","price","style","color","padding","fontSize","CalendarCols","availability","cols","r","firstDayOfMonth","lastDayOfMonth","currentDay","onSelectDay","c","dayPosition","i","day","dayIsAllowed","includes","push","Date","child","Calendar","availableDays","initialDate","setDate","showOptionSelector","setShowOptionSelector","setSelectedDay","today","days","calendar","getDate","firstOfMonth","lastOfMonth","getDay","find","item","m","y","defaultProps","ReactDOM","render","adult","e","console","log","document","getElementById"],"mappings":"8UAceA,G,MAVQ,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACrB,OACI,yBAAKC,UAAU,mBAAmBD,KCQ3BE,G,MAVK,SAAC,GAAgB,IAAfF,EAAc,EAAdA,SAClB,OACI,yBAAKC,UAAU,gBAAgBD,KCN1BG,EAAS,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,YAAa,UAAW,YAAa,aACzHC,EAAa,CACtBC,OAAQ,EACRC,QAAS,EACTC,UAAW,EACXC,SAAU,EACVC,OAAQ,EACRC,SAAU,EACVC,OAAQ,GCgCGC,G,MAnCQ,SAAC,GAEjB,IADHC,EACE,EADFA,YAAaC,EACX,EADWA,KAAMC,EACjB,EADiBA,kBAAmBC,EACpC,EADoCA,kBAEtC,OACI,4BAAQf,UAAU,mBACd,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,QACX,4BAAQgB,KAAK,SAASC,UAAWL,EAAaM,QAASH,GAAvD,MAEJ,6BACI,4BAAKF,EAAKM,eACV,4BAAKjB,EAAOW,EAAKO,cAErB,yBAAKpB,UAAU,QACX,4BAAQgB,KAAK,SAASE,QAASJ,GAA/B,OAGR,yBAAKd,UAAU,wBACX,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,uC,OClBDqB,G,MARA,WACX,OACI,yBAAKrB,UAAU,mBACX,gEC8DGsB,G,MA/Dc,SAAC,GAEvB,IADHC,EACE,EADFA,QAASC,EACP,EADOA,SAAUC,EACjB,EADiBA,YAAaC,EAC9B,EAD8BA,KAAMb,EACpC,EADoCA,KAAMG,EAC1C,EAD0CA,KAAMW,EAChD,EADgDA,cAChD,EACsCC,mBAAS,MAD/C,mBACKC,EADL,KACmBC,EADnB,OAEkCF,oBAAS,GAF3C,mBAEKG,EAFL,KAEiBC,EAFjB,OAGgCJ,oBAAS,GAHzC,mBAGKK,EAHL,KAGgBC,EAHhB,KAIIC,EAAqB,SAAAC,GACvBF,GAAa,GACbE,EAAMC,UAF0B,IAGdC,EAAWF,EAArBG,OAAUD,MACZE,EAAI,aACN3B,KAAMA,EAAK4B,cAAcC,MAAM,KAAK,IACjChB,EAAKiB,MAAML,IAEdX,GAEAK,GAAc,GACdY,OAAOC,MAAMlB,GACRmB,MAAK,SAAAC,GACsB,QAApBA,EAASC,QACThB,GAAc,GACdF,EAAgBU,KAEhBR,GAAc,GACdE,GAAa,QAIzBJ,EAAgBU,IAMxB,OACI,yBAAKxC,UAAU,0BACV+B,GAAc,kBAAC,EAAD,MACf,iCACI,4BAAKN,EAAYZ,KAAKoC,sBACtB,wBAAIjD,UAAU,wBACb0B,EAAKiB,MAAMO,KAAI,SAACC,EAAMC,GACnB,OACI,wBAAIA,IAAKA,GACL,2BAAOpC,KAAK,QAAQqC,KAAK,OAAOC,GAAE,iBAAYF,GAAOd,MAAOc,EAAKG,SAAUpB,IAD/E,OAEI,2BAAOqB,QAAO,iBAAYJ,IAAQD,EAAKM,KAAvC,QAAkDN,EAAKO,GAAvD,MAAuE,YAAT1C,GAAuB,OAASmC,EAAKQ,aAMlH1B,GAAa,uBAAG2B,MAAO,CAACC,MAAO,MAAOC,QAAS,OAAQC,SAAU,WAApD,+DACd,6BAAS/D,UAAU,kCACf,4BAAQkB,QArBG,WACnBM,EAASK,IAoBgCb,KAAK,SAAShB,UAAU,SAASiB,UAAWY,GAA7E,WACA,4BAAQX,QAASK,EAASP,KAAK,SAAShB,UAAU,UAAlD,gBCjDVgE,G,MAAe,SAAC,GAKlB,IAHG,IADHC,EACE,EADFA,aAAcC,EACZ,EADYA,KAAMrD,EAClB,EADkBA,KAAMsD,EACxB,EADwBA,EAAGC,EAC3B,EAD2BA,gBAAiBC,EAC5C,EAD4CA,eAAgBC,EAC5D,EAD4DA,WAAYC,EACxE,EADwEA,YAAavD,EACrF,EADqFA,KAAM2C,EAC3F,EAD2FA,MAEvFa,EAAI,GACNC,EAAc,EAFhB,WAGOC,GACL,IAAMC,EAAMD,EAAIN,EAAkB,EAC5BQ,EAAeX,EAAaY,SAASJ,GAC3CD,EAAEM,KACE,kBAAC,EAAD,CAAgB1B,IAAKsB,GAEbA,GAAKN,GACFC,GAAkBM,GAEjB,4BACI1D,SAAUqD,EAAaK,IAAQC,EAC/B1D,QAAS,kBAAMqD,EAAY,CAAC1D,KAAM,IAAIkE,KAAKlE,EAAKM,cAAeN,EAAKO,WAAYuD,MAChF3D,KAAK,UAEL,6BAAM2D,GACLL,GAAcK,GAAOC,GAAyB,cAAT5D,GAAwB,yBAAKhB,UAAU,+BAAf,IAA+C2D,EAAMqB,UAMvIP,KArBKC,EAAIP,EAAID,EAAMQ,EAAKR,EAAQC,EAAID,EAAQQ,IAAM,EAA7CA,GAuBT,OAAOF,IAGLS,EAAW,SAAC,GAuCd,IAvC2E,IAA3DC,EAA0D,EAA1DA,cAAeC,EAA2C,EAA3CA,YAAa3D,EAA8B,EAA9BA,SAAUG,EAAoB,EAApBA,cAAoB,EAClDC,mBAAS,IAAImD,KAAKI,IADgC,mBACnEtE,EADmE,KAC7DuE,EAD6D,OAEtBxD,oBAAS,GAFa,mBAEnEyD,EAFmE,KAE/CC,EAF+C,OAGpC1D,mBAAS,MAH2B,mBAGnEH,EAHmE,KAGtD8D,EAHsD,KAIpEC,EAAQ,IAAIT,KACZnE,EAAc4E,EAAQ3E,EAatB0D,EAAc,SAAA7C,GAChB4D,GAAsB,GACtBC,EAAe7D,IASX+D,EAAsBP,EAAtBO,KAAM9B,EAAgBuB,EAAhBvB,MAAO3C,EAASkE,EAATlE,KACfiD,EAAewB,EAAKvC,KAAI,SAAAyB,GAAG,OAAIxE,EAAWwE,EAAIA,QAC9Ce,EAAW,GACXpB,EAAazD,EAAK8E,UAClBC,EAAe,IAAIb,KAAKlE,EAAKM,cAAeN,EAAKO,WAAY,GAC7DyE,EAAc,IAAId,KAAKlE,EAAKM,cAAeN,EAAKO,WAAa,EAAG,GAChEgD,EAAkBwB,EAAaE,SAC/BzB,EAAiBwB,EAAYF,UAG1BxB,EAAI,EAAGA,EAFH,EAEaA,IACtBuB,EAASZ,KACL,kBAAC,EAAD,CAAa1B,IAAKe,GACd,kBAAC,EAAD,CACID,KALH,EAMGI,WAAYA,EACZzD,KAAMA,EACNuD,gBAAiBA,EACjBC,eAAgBA,EAChBJ,aAAcA,EACdE,EAAGA,EACHI,YAAaA,EACbZ,MAAOA,EACP3C,KAAMA,MAKtB,OACI,6BAAShB,UAAU,YACdqF,GACG,kBAAC,EAAD,CACI9D,QAvCW,WACvB+D,GAAsB,IAuCV9D,SArCK,SAAAE,GACjB4D,GAAsB,GACtB9D,EAASE,IAoCGD,YAAaA,EACbC,KAAM+D,EAAKM,MAAK,SAAAC,GACZ,OAAO7F,EAAW6F,EAAKrB,OAASlD,EAAYZ,KAAKiF,YAErDjF,KAAMA,EACNc,cAAeA,EACfX,KAAMA,IAGd,kBAAC,EAAD,CACIJ,YAAaA,EACbC,KAAMA,EACNC,kBArEc,WACtB,IAAMmF,EAAIpF,EAAKO,WAAa,EACtB8E,EAAIrF,EAAKM,cACfiE,EAAQ,IAAIL,KAAKmB,EAAGD,EAAG,KAmEflF,kBAjEc,WACtB,GAAIH,EAAa,CACb,IAAMqF,EAAIpF,EAAKO,WAAa,EACtB8E,EAAIrF,EAAKM,cACfiE,EAAQ,IAAIL,KAAKmB,EAAGD,EAAGA,IAAMT,EAAMpE,YAAc8E,IAAMV,EAAMrE,cAAgBqE,EAAMG,UAAY,QA+D9FD,IAUbT,EAASkB,aAAe,CACpBjB,cAAe,GACfC,YAAa,IAAIJ,KACjBpD,cAAe,MAGJsD,QC7CfmB,IAASC,OACL,kBAAC,EAAD,CACInB,cAvFY,CAChB,KAAQ,UACR,UAAa,GACb,MAAS,CACLoB,MAAO,IACPtB,MAAO,KAEX,KAAQ,CAAC,CACL,IAAO,SACP,MAAS,KACT,MAAS,CAAC,CACN,sBAAyB,EACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,EACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,EACzB,KAAQ,QACR,GAAM,QACN,MAAS,OAEf,CACE,IAAO,YACP,MAAS,CAAC,CACN,sBAAyB,EACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,EACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,EACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,EACzB,KAAQ,QACR,GAAM,QACN,MAAS,OAEf,CACE,IAAO,SACP,MAAS,CAAC,CACN,sBAAyB,EACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,EACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,GACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,GACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,GACzB,KAAQ,QACR,GAAM,QACN,MAAS,KACX,CACE,sBAAyB,GACzB,KAAQ,QACR,GAAM,QACN,MAAS,SAQbxD,SAAU,SAAA+E,GAAC,OAAI3D,OAAO4D,QAAQC,IAAI,WAAYF,IAC9C5E,cAAc,gDAElB+E,SAASC,eAAe,W","file":"static/js/main.73246a61.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst CalendarColumn = ({children}) => {\n    return (\n        <div className=\"calendar-column\">{children}</div>\n    );\n};\n\nCalendarColumn.propTypes = {\n    children: PropTypes.node\n};\n\nexport default CalendarColumn;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './styles.css';\n\nconst CalendarRow = ({children}) => {\n    return (\n        <div className=\"calendar-row\">{children}</div>\n    );\n};\n\nCalendarRow.propTypes = {\n    children: PropTypes.node\n};\n\nexport default CalendarRow;","export const months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Setiembre', 'Octubre', 'Noviembre', 'Diciembre'];\nexport const listOfDays = {\n    monday: 1,\n    tuesday: 2,\n    wednesday: 3,\n    thursday: 4,\n    friday: 5,\n    saturday: 6,\n    sunday: 0,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { months } from '../../constants';\nimport './styles.css';\n\nconst CalendarHeader = ({\n    allowToBack, date, handleOnNextMonth, handleOnPrevMonth\n}) => {\n    return (\n        <header className=\"calendar-header\">\n            <div className=\"calendar-header-controls\">\n                <div className=\"prev\">\n                    <button type=\"button\" disabled={!allowToBack} onClick={handleOnPrevMonth}>{`<`}</button>\n                </div>\n                <div>\n                    <h2>{date.getFullYear()}</h2>\n                    <h3>{months[date.getMonth()]}</h3>\n                </div>\n                <div className=\"next\">\n                    <button type=\"button\" onClick={handleOnNextMonth}>{`>`}</button>\n                </div>\n            </div>\n            <div className=\"calendar-header-days\">\n                <div>Do</div>\n                <div>Lu</div>\n                <div>Ma</div>\n                <div>Mi</div>\n                <div>Ju</div>\n                <div>Vi</div>\n                <div>Sa</div>\n            </div>\n        </header>\n    );\n}\n\nCalendarHeader.propTypes = {\n    handleOnNextMonth: PropTypes.func,\n    handleOnPrevMonth: PropTypes.func,\n};\n\nexport default CalendarHeader;","import React from 'react';\nimport './styles.css';\n\nconst Loader = () => {\n    return (\n        <div className=\"calendar-loader\">\n            <p>Verificando disponibilidad ...</p>\n        </div>\n    );\n};\n\nexport default Loader;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../loader/Loader';\nimport './styles.css';\n\nconst CalendarSelectOption = ({\n    onClose, onAccept, selectedDay, data, date, type, urlToValidate\n}) => {\n    const [itemSelected, setItemSelected] = useState(null);\n    const [showLoader, setShowLoader] = useState(false);\n    const [showError, setShowError] = useState(false);\n    const handleOnSelectItem = event => {\n        setShowError(false);\n        event.persist();\n        const { target: { value }} = event;\n        const info = {\n            date: date.toISOString().split('T')[0],\n            ...data.hours[value]\n        };\n        if (urlToValidate) {\n            // Make fetch\n            setShowLoader(true);\n            window.fetch(urlToValidate)\n                .then(response => {\n                    if (response.status === '200') {\n                        setShowLoader(false);\n                        setItemSelected(info);\n                    } else {\n                        setShowLoader(false);\n                        setShowError(true);\n                    }\n                });\n        } else {\n            setItemSelected(info);\n        }\n    };\n    const handleOnAccept = () => {\n        onAccept(itemSelected);\n    } ;\n    return (\n        <div className=\"calendar-select-option\">\n            {showLoader && <Loader />}\n            <section>\n                <h3>{selectedDay.date.toLocaleDateString()}</h3>\n                <ul className=\"calendar-select-list\">\n                {data.hours.map((hour, key) => {\n                    return (\n                        <li key={key}>\n                            <input type=\"radio\" name=\"time\" id={`option_${key}`} value={key} onChange={handleOnSelectItem} />&nbsp;\n                            <label htmlFor={`option_${key}`}>{hour.from}hs - {hour.to}hs {type === 'perHour' &&  ' - $' + hour.price}</label>\n                        </li>\n                    );\n                })}\n                </ul>\n            </section>\n            {showError && <p style={{color: 'red', padding: '10px', fontSize: '0.8rem'}}>La hora seleccionada no está disponible para esta fecha.</p>}\n            <section className=\"calendar-select-option-buttons\">\n                <button onClick={handleOnAccept} type=\"button\" className=\"accept\" disabled={!itemSelected}>Aceptar</button>\n                <button onClick={onClose} type=\"button\" className=\"cancel\">Cancelar</button>\n            </section>\n        </div>\n    );\n}\n\nCalendarSelectOption.propTypes = {\n    children: PropTypes.node\n};\n\nexport default CalendarSelectOption;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport CalendarColumn from '../calendarColumn/CalendarColumn';\nimport CalendarRow from '../calendarRow/CalendarRow';\nimport CalendarHeader from '../calendarHeader/CalendarHeader';\nimport CalendarSelectOption from '../calendarSelectOption/CalendarSelectOption';\nimport { listOfDays } from '../../constants';\nimport './styles.css';\n\nconst CalendarCols = ({\n    availability, cols, date, r, firstDayOfMonth, lastDayOfMonth, currentDay, onSelectDay, type, price\n}) => {\n    const c = [];\n    let dayPosition = 0;\n    for (let i = r * cols; i < (cols + (r * cols)); i++) {\n        const day = i - firstDayOfMonth + 1;\n        const dayIsAllowed = availability.includes(dayPosition);\n        c.push(\n            <CalendarColumn key={i}>\n                {\n                    i >= firstDayOfMonth\n                    && lastDayOfMonth >= day\n                    && (\n                        <button\n                            disabled={currentDay > day || !dayIsAllowed}\n                            onClick={() => onSelectDay({date: new Date(date.getFullYear(), date.getMonth(), day)})}\n                            type=\"button\"\n                        >\n                            <div>{day}</div>\n                            {currentDay <= day && dayIsAllowed && type === 'perPerson' && <div className=\"calendar-button-description\">${price.child}</div>}\n                        </button>\n                    )\n                }\n            </CalendarColumn>\n        );\n        dayPosition++;\n    }\n    return c;\n};\n\nconst Calendar = ({ availableDays, initialDate, onAccept, urlToValidate }) => {\n    const [date, setDate] = useState(new Date(initialDate));\n    const [showOptionSelector, setShowOptionSelector] = useState(false);\n    const [selectedDay, setSelectedDay] = useState(null);\n    const today = new Date();\n    const allowToBack = today < date;\n    const handleOnNextMonth = () => {\n        const m = date.getMonth() + 1;\n        const y = date.getFullYear();\n        setDate(new Date(y, m, 1));\n    };\n    const handleOnPrevMonth = () => {\n        if (allowToBack) {\n            const m = date.getMonth() - 1;\n            const y = date.getFullYear();\n            setDate(new Date(y, m, m === today.getMonth() && y === today.getFullYear() ? today.getDate() : 1));\n        }\n    };\n    const onSelectDay = data => {\n        setShowOptionSelector(true);\n        setSelectedDay(data);\n    };\n    const onCloseDaySelector = () => {\n        setShowOptionSelector(false);\n    };\n    const onAcceptDate = data => {\n        setShowOptionSelector(false);\n        onAccept(data);\n    }\n    const { days, price, type } = availableDays;\n    const availability = days.map(day => listOfDays[day.day]);\n    const calendar = [];\n    const currentDay = date.getDate();\n    const firstOfMonth = new Date(date.getFullYear(), date.getMonth(), 1);\n    const lastOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    const firstDayOfMonth = firstOfMonth.getDay();\n    const lastDayOfMonth = lastOfMonth.getDate();\n    const rows = 5;\n    const cols = 7;\n    for (let r = 0; r < rows; r++) {\n        calendar.push(\n            <CalendarRow key={r}>\n                <CalendarCols\n                    cols={cols}\n                    currentDay={currentDay}\n                    date={date}\n                    firstDayOfMonth={firstDayOfMonth}\n                    lastDayOfMonth={lastDayOfMonth}\n                    availability={availability}\n                    r={r}\n                    onSelectDay={onSelectDay}\n                    price={price}\n                    type={type}\n                />\n            </CalendarRow>\n        );\n    }\n    return (\n        <section className=\"calendar\">\n            {showOptionSelector && (\n                <CalendarSelectOption\n                    onClose={onCloseDaySelector}\n                    onAccept={onAcceptDate}\n                    selectedDay={selectedDay}\n                    data={days.find(item => {\n                        return listOfDays[item.day] === selectedDay.date.getDay();\n                    })}\n                    date={date}\n                    urlToValidate={urlToValidate}\n                    type={type}\n                />\n            )}\n            <CalendarHeader\n                allowToBack={allowToBack}\n                date={date}\n                handleOnNextMonth={handleOnNextMonth}\n                handleOnPrevMonth={handleOnPrevMonth}\n            />\n            {calendar}\n        </section>\n    );\n};\n\nCalendar.propTypes = {\n    availableDays: PropTypes.object,\n    urlToValidate: PropTypes.string,\n};\n\nCalendar.defaultProps = {\n    availableDays: [],\n    initialDate: new Date(),\n    urlToValidate: null,\n}\n\nexport default Calendar;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calendar from './lib/components/calendar/Calendar';\n\nconst serviceMock = {\n    \"type\": \"perHour\", // perHour\n    \"serviceId\": 98,\n    \"price\": {\n        adult: 700,\n        child: 400,\n    }, // Only applies if type is \"perPerson\"\n    \"days\": [{\n        \"day\": \"monday\",\n        \"price\": null, // Consultar esta variable, ya que tiene más sentido\n        \"hours\": [{\n            \"serviceAvailabilityId\": 1,\n            \"from\": \"10:00\",\n            \"to\": \"11:00\",\n            \"price\": 200\n        },{\n            \"serviceAvailabilityId\": 2,\n            \"from\": \"11:00\",\n            \"to\": \"12:00\",\n            \"price\": 200\n        },{\n            \"serviceAvailabilityId\": 3,\n            \"from\": \"12:00\",\n            \"to\": \"13:00\",\n            \"price\": 200\n        }]\n    },{\n        \"day\": \"wednesday\",\n        \"hours\": [{\n            \"serviceAvailabilityId\": 4,\n            \"from\": \"11:00\",\n            \"to\": \"12:00\",\n            \"price\": 300\n        },{\n            \"serviceAvailabilityId\": 5,\n            \"from\": \"12:00\",\n            \"to\": \"13:00\",\n            \"price\": 400\n        },{\n            \"serviceAvailabilityId\": 6,\n            \"from\": \"13:00\",\n            \"to\": \"14:00\",\n            \"price\": 200\n        },{\n            \"serviceAvailabilityId\": 7,\n            \"from\": \"14:00\",\n            \"to\": \"15:00\",\n            \"price\": 200\n        }]\n    },{\n        \"day\": \"sunday\",\n        \"hours\": [{\n            \"serviceAvailabilityId\": 8,\n            \"from\": \"14:00\",\n            \"to\": \"15:00\",\n            \"price\": 500\n        },{\n            \"serviceAvailabilityId\": 9,\n            \"from\": \"15:00\",\n            \"to\": \"16:00\",\n            \"price\": 700\n        },{\n            \"serviceAvailabilityId\": 10,\n            \"from\": \"16:00\",\n            \"to\": \"17:00\",\n            \"price\": 200\n        },{\n            \"serviceAvailabilityId\": 11,\n            \"from\": \"10:00\",\n            \"to\": \"11:00\",\n            \"price\": 200\n        },{\n            \"serviceAvailabilityId\": 12,\n            \"from\": \"11:00\",\n            \"to\": \"12:00\",\n            \"price\": 200\n        },{\n            \"serviceAvailabilityId\": 13,\n            \"from\": \"12:00\",\n            \"to\": \"13:00\",\n            \"price\": 200\n        }]\n    }]\n};\n\nReactDOM.render(\n    <Calendar\n        availableDays={serviceMock}\n        onAccept={e => window.console.log('onAccept', e)}\n        urlToValidate=\"https://jsonplaceholder.typicode.com/postss\"\n    />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}